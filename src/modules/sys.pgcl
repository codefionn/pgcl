##
# Get basic type of the expression
##
type expr = syscall (@type, expr)
export type

##
# Returns time that was required to execute the expression
##
time expr = syscall (@time, expr)
export time

##
# Executes a command in the native shell
# (`cmd` on Windows, `sh` on other)
##
cmd cmd = syscall (@cmd, cmd)
export cmd

##
# Print a string, float or integer to stdout
##
println val = syscall (@println, val)
export println

##
# Spawn an actor
##
actor init fn = syscall (@actor, (init, fn))
export actor

exit_actor signal = syscall (@exitactor, signal)
export exit_actor

##
# Makes a http request
##
fetch (url, request) = syscall (@httprequest, (url, request))
fetch (url) = syscall (@httprequest, (url, {}))
export fetch

##
# Exit the program
##
exit code = syscall (@exit, code)
export exit

##
# Spawn a message channel
##
channel = syscall (@createmsg, _)
export channel

##
# Receive a message from a channel
##
recv_channel handle = syscall (@recvmsg, handle)
export recv_channel

##
# Returns asserts done at runtime (all, success, failure)
##
asserts = syscall (@asserts, _)
export asserts

json_encode s   = syscall (@JsonEncode, s)
json_decode obj = syscall (@JsonDecode, obj)
json = {
  encode: json_encode,
  decode: json_decode,
}

export json

##
# Write `contents` to `file`
# @var string file
# @var string content
# @return @true|@false
##
fs_write file content = syscall (@WriteFile, (file, content))
##
# Read contets from `file`
# @var string file
# @return string|@false
##
fs_read  file         = syscall (@ReadFile, file)

fs_delete file        = syscall (@DeleteFile, file)
fs = {
  write: fs_write,
  read: fs_read,
  delete: fs_delete,
}

export fs
